#************************************************************************#
#* rc.sks - sample script to start and stop the SKS processes           *#
#*                                                                      *#
#* Copyright (C) 2011, 2012, 2013  John Clizbe                         *#
#*                                                                      *#
#* This file is part of SKS.  SKS is free software; you can             *#
#* redistribute it and/or modify it under the terms of the GNU General  *#
#* Public License as published by the Free Software Foundation; either  *#
#* version 2 of the License, or (at your option) any later version.     *#
#*                                                                      *#
#* This program is distributed in the hope that it will be useful, but  *#
#* WITHOUT ANY WARRANTY; without even the implied warranty of           *#
#* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU    *#
#* General Public License for more details.                             *#
#*                                                                      *#
#* You should have received a copy of the GNU General Public License    *#
#* along with this program; if not, write to the Free Software          *#
#* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  *#
#* USA or see <http://www.gnu.org/licenses/>.                           *#
#************************************************************************#
#
#! /bin/sh
#
CLIENT=/usr/bin/sks
DIR=/var/sks
STARTOPTS=
#STARTOPTS will need to be in quotes if it has white space in it

test -e $CLIENT || exit 0

test -d $DIR || exit 0

case "$1" in
        start)
		cd $DIR
                echo -n "Starting SKS:"
                echo -n \ sks_db
                $CLIENT db &
                echo -n \ sks_recon
                $CLIENT recon &
                echo "."
        ;;
        stop)
                echo -n "Stopping SKS:"
		killall sks
		while [ "`pidof sks`" ]; do sleep 1; done # wait until SKS processes have exited
                echo "."
        ;;
        restart|force-reload)
		$0 stop
		sleep 1
		$0 start
   	;;
    	*)
		echo "Usage: $0 {start|stop|reload|restart|force-reload}"
		exit 1
	;;
esac

exit 0
