#ifndef ANALYZER_MATH_SUPPORT_H
#define ANALYZER_MATH_SUPPORT_H


#include <NTL/ZZ_p.h>
#include <vector>
#include <Misc/mpi.h>
#include <map>
#include <PKA/PKAs.h>
#include <Hashes/Hashes.h>
#include "EC_point.h"

using namespace OpenPGP;
using namespace NTL;

namespace peaks{
namespace analyzer{
namespace Math_Support {

    namespace ENDIAN{
        const int BIG = 1;
        const int LITTLE = -1;
        const int ORIGINAL = 0;
    }

    const ZZ FIRST_3000_PRIME = conv<ZZ>("1230231922161117176931558813276752514640713895736833715766118029160058800614672948775360067838593459582429649254051804908512884180898236823585082482065348331234959350355845017413023320111360666922624728239756880416434478315693675013413090757208690376793296658810662941824493488451726505303712916005346747908623702673480919353936813105736620402352744776903840477883651100322409301983488363802930540482487909763484098253940728685132044408863734754271212592471778643949486688511721051561970432780747454823776808464180697103083861812184348565522740195796682622205511845512080552010310050255801589349645928001133745474220715013683413907542779063759833876101354235184245096670042160720629411581502371248008430447184842098610320580417992206662247328722122088513643683907670360209162653670641130936997002170500675501374723998766005827579300723253474890612250135171889174899079911291512399773872178519018229989376");

    const std::vector<unsigned int> primes = {3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,
                                        79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167};

    const std::vector<ZZ> markers = {
            conv<ZZ>("6"),
            conv<ZZ>("30"),
            conv<ZZ>("126"),
            conv<ZZ>("1026"),
            conv<ZZ>("5658"),
            conv<ZZ>("107286"),
            conv<ZZ>("199410"),
            conv<ZZ>("8388606"),
            conv<ZZ>("536870910"),
            conv<ZZ>("2147483646"),
            conv<ZZ>("67109890"),
            conv<ZZ>("2199023255550"),
            conv<ZZ>("8796093022206"),
            conv<ZZ>("140737488355326"),
            conv<ZZ>("5310023542746834"),
            conv<ZZ>("576460752303423486"),
            conv<ZZ>("1455791217086302986"),
            conv<ZZ>("147573952589676412926"),
            conv<ZZ>("20052041432995567486"),
            conv<ZZ>("6041388139249378920330"),
            conv<ZZ>("207530445072488465666"),
            conv<ZZ>("9671406556917033397649406"),
            conv<ZZ>("618970019642690137449562110"),
            conv<ZZ>("79228162521181866724264247298"),
            conv<ZZ>("2535301200456458802993406410750"),
            conv<ZZ>("1760368345969468176824550810518"),
            conv<ZZ>("50079290986288516948354744811034"),
            conv<ZZ>("473022961816146413042658758988474"),
            conv<ZZ>("10384593717069655257060992658440190"),
            conv<ZZ>("144390480366845522447407333004847678774"),
            conv<ZZ>("2722258935367507707706996859454145691646"),
            conv<ZZ>("174224571863520493293247799005065324265470"),
            conv<ZZ>("696898287454081973172991196020261297061886"),
            conv<ZZ>("713623846352979940529142984724747568191373310"),
            conv<ZZ>("1800793591454480341970779146165214289059119882"),
            conv<ZZ>("126304807362733370595828809000324029340048915994"),
            conv<ZZ>("11692013098647223345629478661730264157247460343806"),
            conv<ZZ>("187072209578355573530071658587684226515959365500926")
    };

    const std::vector<ZZ> fail_modulus_roca = {
            conv<ZZ>("19089470491547632015867380494603366846979936677899040455785311493700173635637619562546319438505971838982429681121352968394792665704951454132311441831732124044135181992768774222852895664400681270897445415599851900461316070972022018317962889565731866601557238345786316235456299813772607869009873279585912430769332375239444892105064608255089298943707214066350230292124208314161171265468111771687514518823144499250339825049199688099820304852696380797616737008621384107235756455735861506433065173933123259184114000282435500939123478591192413006994709825840573671701120771013072419520134975733578923370992644987545261926257"),
            conv<ZZ>("19719156936912863379349096808628262493653373055863997652408889316214728522393202728189527127254793605704450205551678151060581440158306838282602414513162326595711711202019108500002755826793962311659470478275505209660088804156371500671279049697571870705677164939411522850474166472889130002232441215368582752913905538570779382587414401264125812068741514384136724557699632107050323074384766455651320542263886272472028384241724077790848358093998143659934832836120001163885385369970523063808922062837683387191803872605182481872411684138928086300529503427924400989787173232141520010814635510303238119315988420197359361603701"),
            conv<ZZ>("18345737067617463529042012619916847940954059320616198141320339150679726399988091099309244963065103157399476664019397157893030619614956395018417378615991452117403582155014864283138704855152483071855823012067777158843027889672664549402611903134758165075478652038640948304780285754985287405053790945246506774971877372630147632063565659197687049966263777088352973708079537078553143406014863258254380627503682006219404691912211686874897303934249016449921325519651245906749404930095311633757620315805109836156853265149070496923839644208994558732292455201948507906937949854261183763636794394055801683552639639135304653943101")
    };
    const std::vector<ZZ> pass_modulus_roca = {
            conv<ZZ>("22730648488434794773917740390299578889583447730025036715019633862402760357591100190113367021542644560034361180005303517258694740016127027881041857854449902345967599528726038698722665366632254603732853992232639792817285661939166203246591646191773504477250466670095420566076419106421565226893647330452094287937446020095801354052399147315913055618019341025774568952870519887053489144445834809408720407183301187758607222418408777038206398048708468750291511560435210175116187197288691275691422118624297692978397127117143090767465207940668572257182716412740588136546658393237283232500497446696187534684184547805288435743993"),
            conv<ZZ>("24432712237705766531879245610046954870807885936693209490739936919906354226141193351067671480997528361425113065762728503757129996743793092271284787062359240325781173256896827964603329203769297077864427589151552413635522203280322362322380477333457083982981801732033166328622191650416815800046748339817621782862603701494748834280634697712101971590053292693234186878263629030880549199493029824767984969252994516851267179726340538881897348208313122269528771325166251489221016190225128528878694434208776891096522439033365522132097601133290756533659201879966808536788907840054663797117512537529619208353093951871802915037551"),
            conv<ZZ>("27092679594288953336414109830270738435068214043669499737921789228168661634766695006303987598273481334144863851339995395332452473076368276352153455843022381752260479624505791188787857326202718778410831002944059174761258579010031882720435383242283065849480899080204952965046916318919832655013378162456829821089363822706559541560695792337619859424534581007459974247431586154891495127811039122956000155263303971370823678304553251465590303104270588409088838692581380621799328161861854569137757043898528103757407925544580130460757760596792253989861779055663255173808422109601878977862490352727791625779907846654743297126349")
    };

    OpenPGP::MPI zz_to_mpi(const ZZ &n);
    std::string zz_to_string(const ZZ &n);
    OpenPGP::MPI zz_to_mpi(const ZZ_p &n);
    std::string zz_to_string(const ZZ_p &n);

    ZZ ZZ_from_bytes(const std::string &p, long n, const int &endian);
    //ZZ decode_little_endian(const std::string &n, const int &bytes);

    bool roca_test(const ZZ &mod);
/*
    EC_point EC_scalar_product(const EC_point &P, ZZ n);
    EC_point double_point(const EC_point &P);
*/
    // bool PrimeTest(const ZZ &zz);

    // ZZ GCD(const ZZ n_1, ZZ n_2);

    NTL::ZZ PowerModulo(ZZ b, ZZ &e, ZZ &n);

}
}
}
#endif //ANALYZER_MATH_SUPPORT_H
